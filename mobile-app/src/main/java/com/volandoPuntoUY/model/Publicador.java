
package com.volandoPuntoUY.model;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "Publicador", targetNamespace = "http://servidor/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Publicador {


    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @throws VueloRepetidoException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/altaVueloRequest", output = "http://servidor/Publicador/altaVueloResponse", fault = {
        @FaultAction(className = VueloRepetidoException_Exception.class, value = "http://servidor/Publicador/altaVuelo/Fault/VueloRepetidoException")
    })
    public void altaVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7)
        throws VueloRepetidoException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @throws PaqueteYaExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/crearPaqueteRutasDeVueloRequest", output = "http://servidor/Publicador/crearPaqueteRutasDeVueloResponse", fault = {
        @FaultAction(className = PaqueteYaExisteException_Exception.class, value = "http://servidor/Publicador/crearPaqueteRutasDeVuelo/Fault/PaqueteYaExisteException")
    })
    public void crearPaqueteRutasDeVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        float arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5)
        throws PaqueteYaExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtUsuario
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerInfoUsuarioRequest", output = "http://servidor/Publicador/obtenerInfoUsuarioResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/obtenerInfoUsuario/Fault/UsuarioNoExisteException")
    })
    public DtUsuario obtenerInfoUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/esClienteRequest", output = "http://servidor/Publicador/esClienteResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/esCliente/Fault/UsuarioNoExisteException")
    })
    public boolean esCliente(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtClienteWeb
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/cargaClienteWebRequest", output = "http://servidor/Publicador/cargaClienteWebResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/cargaClienteWeb/Fault/UsuarioNoExisteException")
    })
    public DtClienteWeb cargaClienteWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/esAerolineaRequest", output = "http://servidor/Publicador/esAerolineaResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/esAerolinea/Fault/UsuarioNoExisteException")
    })
    public boolean esAerolinea(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.DtUsuarioArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarUsuariosRequest", output = "http://servidor/Publicador/listarUsuariosResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/listarUsuarios/Fault/UsuarioNoExisteException")
    })
    public DtUsuarioArray listarUsuarios()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.DtAerolineaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarAerolineasDataWebRequest", output = "http://servidor/Publicador/listarAerolineasDataWebResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/listarAerolineasDataWeb/Fault/UsuarioNoExisteException")
    })
    public DtAerolineaArray listarAerolineasDataWeb()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarUsuariosNickWebRequest", output = "http://servidor/Publicador/listarUsuariosNickWebResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/listarUsuariosNickWeb/Fault/UsuarioNoExisteException")
    })
    public StringArray listarUsuariosNickWeb()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws UsuarioRepetidoException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/altaClienteRequest", output = "http://servidor/Publicador/altaClienteResponse", fault = {
        @FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://servidor/Publicador/altaCliente/Fault/UsuarioRepetidoException")
    })
    public void altaCliente(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        TipoDocumento arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9)
        throws UsuarioRepetidoException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarClientesWebRequest", output = "http://servidor/Publicador/listarClientesWebResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/listarClientesWeb/Fault/UsuarioNoExisteException")
    })
    public StringArray listarClientesWeb()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws PaqueteNoExisteException_Exception
     * @throws PaqueteYaCompradoException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/clienteCompraPaqueteRequest", output = "http://servidor/Publicador/clienteCompraPaqueteResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/clienteCompraPaquete/Fault/UsuarioNoExisteException"),
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://servidor/Publicador/clienteCompraPaquete/Fault/PaqueteNoExisteException"),
        @FaultAction(className = PaqueteYaCompradoException_Exception.class, value = "http://servidor/Publicador/clienteCompraPaquete/Fault/PaqueteYaCompradoException")
    })
    public void clienteCompraPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws PaqueteNoExisteException_Exception, PaqueteYaCompradoException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/compraPaquetesRequest", output = "http://servidor/Publicador/compraPaquetesResponse")
    public void compraPaquetes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        float arg4);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtReservaWebArray
     * @throws ReservaNoExisteException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarReservasClienteWebRequest", output = "http://servidor/Publicador/listarReservasClienteWebResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/listarReservasClienteWeb/Fault/UsuarioNoExisteException"),
        @FaultAction(className = ReservaNoExisteException_Exception.class, value = "http://servidor/Publicador/listarReservasClienteWeb/Fault/ReservaNoExisteException")
    })
    public DtReservaWebArray listarReservasClienteWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws ReservaNoExisteException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtPaqueteWebArray
     * @throws PaqueteNoExisteException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarPaquetesCompradosClienteWebRequest", output = "http://servidor/Publicador/listarPaquetesCompradosClienteWebResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/listarPaquetesCompradosClienteWeb/Fault/UsuarioNoExisteException"),
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://servidor/Publicador/listarPaquetesCompradosClienteWeb/Fault/PaqueteNoExisteException")
    })
    public DtPaqueteWebArray listarPaquetesCompradosClienteWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws PaqueteNoExisteException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @throws UsuarioRepetidoException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/altaAereolineaRequest", output = "http://servidor/Publicador/altaAereolineaResponse", fault = {
        @FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://servidor/Publicador/altaAereolinea/Fault/UsuarioRepetidoException")
    })
    public void altaAereolinea(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6)
        throws UsuarioRepetidoException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarCategoriasRequest", output = "http://servidor/Publicador/listarCategoriasResponse")
    public StringArray listarCategorias();

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.DtCiudadWebArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarCiudadesRequest", output = "http://servidor/Publicador/listarCiudadesResponse")
    public DtCiudadWebArray listarCiudades();

    /**
     * 
     * @param arg0
     * @throws CategoriaRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/agregarCategoriaRequest", output = "http://servidor/Publicador/agregarCategoriaResponse", fault = {
        @FaultAction(className = CategoriaRepetidaException_Exception.class, value = "http://servidor/Publicador/agregarCategoria/Fault/CategoriaRepetidaException")
    })
    public void agregarCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CategoriaRepetidaException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarPaquetesSinComprarRequest", output = "http://servidor/Publicador/listarPaquetesSinComprarResponse")
    public StringArray listarPaquetesSinComprar();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtPaqueteWeb
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerInfoPaqueteRequest", output = "http://servidor/Publicador/obtenerInfoPaqueteResponse")
    public DtPaqueteWeb obtenerInfoPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/agregarRutaAPaqueteRequest", output = "http://servidor/Publicador/agregarRutaAPaqueteResponse")
    public void agregarRutaAPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        TipoAsiento arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarPaquetesRutaRequest", output = "http://servidor/Publicador/listarPaquetesRutaResponse")
    public StringArray listarPaquetesRuta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @throws PaqueteYaCompradoException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/comprarPaqueteRequest", output = "http://servidor/Publicador/comprarPaqueteResponse", fault = {
        @FaultAction(className = PaqueteYaCompradoException_Exception.class, value = "http://servidor/Publicador/comprarPaquete/Fault/PaqueteYaCompradoException")
    })
    public void comprarPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws PaqueteYaCompradoException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     * @throws UsuarioNoEsAerolineaExcepcion_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarRutasDeVueloWebRequest", output = "http://servidor/Publicador/listarRutasDeVueloWebResponse", fault = {
        @FaultAction(className = UsuarioNoEsAerolineaExcepcion_Exception.class, value = "http://servidor/Publicador/listarRutasDeVueloWeb/Fault/UsuarioNoEsAerolineaExcepcion")
    })
    public StringArray listarRutasDeVueloWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoEsAerolineaExcepcion_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.DtRutaDeVueloWebArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarTodasRutasDeVueloConfirmadasDTWebRequest", output = "http://servidor/Publicador/listarTodasRutasDeVueloConfirmadasDTWebResponse")
    public DtRutaDeVueloWebArray listarTodasRutasDeVueloConfirmadasDTWeb();

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     * @throws VueloNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarVuelosWebRequest", output = "http://servidor/Publicador/listarVuelosWebResponse", fault = {
        @FaultAction(className = VueloNoExisteException_Exception.class, value = "http://servidor/Publicador/listarVuelosWeb/Fault/VueloNoExisteException")
    })
    public StringArray listarVuelosWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws VueloNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.volandoPuntoUY.model.DtVueloWebArray
     * @throws VueloNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarVuelosDTWebRequest", output = "http://servidor/Publicador/listarVuelosDTWebResponse", fault = {
        @FaultAction(className = VueloNoExisteException_Exception.class, value = "http://servidor/Publicador/listarVuelosDTWeb/Fault/VueloNoExisteException")
    })
    public DtVueloWebArray listarVuelosDTWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws VueloNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.volandoPuntoUY.model.DtPasaje
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/crearPasajeRequest", output = "http://servidor/Publicador/crearPasajeResponse")
    public DtPasaje crearPasaje(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @return
     *     returns float
     * @throws ReservaYaExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/reservarVueloConPaqueteRequest", output = "http://servidor/Publicador/reservarVueloConPaqueteResponse", fault = {
        @FaultAction(className = ReservaYaExisteException_Exception.class, value = "http://servidor/Publicador/reservarVueloConPaquete/Fault/ReservaYaExisteException")
    })
    public float reservarVueloConPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        DtPasajeArray arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        float arg7)
        throws ReservaYaExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.volandoPuntoUY.model.DtReservaWeb
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerInfoReservaWebRequest", output = "http://servidor/Publicador/obtenerInfoReservaWebResponse")
    public DtReservaWeb obtenerInfoReservaWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarReservasWebRequest", output = "http://servidor/Publicador/listarReservasWebResponse")
    public StringArray listarReservasWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.volandoPuntoUY.model.DtVueloWeb
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerInfoVueloWebRequest", output = "http://servidor/Publicador/obtenerInfoVueloWebResponse")
    public DtVueloWeb obtenerInfoVueloWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtRutaDeVueloWeb
     * @throws RutaDeVueloNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerInfoRutaDeVueloWebRequest", output = "http://servidor/Publicador/obtenerInfoRutaDeVueloWebResponse", fault = {
        @FaultAction(className = RutaDeVueloNoExisteException_Exception.class, value = "http://servidor/Publicador/obtenerInfoRutaDeVueloWeb/Fault/RutaDeVueloNoExisteException")
    })
    public DtRutaDeVueloWeb obtenerInfoRutaDeVueloWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws RutaDeVueloNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtAerolinea
     * @throws RutaDeVueloNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerAerolineaDeRutaDTRequest", output = "http://servidor/Publicador/obtenerAerolineaDeRutaDTResponse", fault = {
        @FaultAction(className = RutaDeVueloNoExisteException_Exception.class, value = "http://servidor/Publicador/obtenerAerolineaDeRutaDT/Fault/RutaDeVueloNoExisteException")
    })
    public DtAerolinea obtenerAerolineaDeRutaDT(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws RutaDeVueloNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarTodasLasRutasDeVueloWebRequest", output = "http://servidor/Publicador/listarTodasLasRutasDeVueloWebResponse")
    public StringArray listarTodasLasRutasDeVueloWeb();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerNicknameAerolineaDeRutaRequest", output = "http://servidor/Publicador/obtenerNicknameAerolineaDeRutaResponse")
    public String obtenerNicknameAerolineaDeRuta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws VueloNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/obtenerRutaDeVueloRequest", output = "http://servidor/Publicador/obtenerRutaDeVueloResponse", fault = {
        @FaultAction(className = VueloNoExisteException_Exception.class, value = "http://servidor/Publicador/obtenerRutaDeVuelo/Fault/VueloNoExisteException")
    })
    public String obtenerRutaDeVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws VueloNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/rechazarRutaRequest", output = "http://servidor/Publicador/rechazarRutaResponse")
    public void rechazarRuta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/aceptarRutaRequest", output = "http://servidor/Publicador/aceptarRutaResponse")
    public void aceptarRuta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     * @throws UsuarioNoEsAerolineaExcepcion_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarRutasIngresadasWebRequest", output = "http://servidor/Publicador/listarRutasIngresadasWebResponse", fault = {
        @FaultAction(className = UsuarioNoEsAerolineaExcepcion_Exception.class, value = "http://servidor/Publicador/listarRutasIngresadasWeb/Fault/UsuarioNoEsAerolineaExcepcion")
    })
    public StringArray listarRutasIngresadasWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoEsAerolineaExcepcion_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.volandoPuntoUY.model.DtRutaDeVueloWebArray
     * @throws UsuarioNoEsAerolineaExcepcion_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarRutasConfirmadasDTWebRequest", output = "http://servidor/Publicador/listarRutasConfirmadasDTWebResponse", fault = {
        @FaultAction(className = UsuarioNoEsAerolineaExcepcion_Exception.class, value = "http://servidor/Publicador/listarRutasConfirmadasDTWeb/Fault/UsuarioNoEsAerolineaExcepcion")
    })
    public DtRutaDeVueloWebArray listarRutasConfirmadasDTWeb(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoEsAerolineaExcepcion_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/esVueloDeAerolineaRequest", output = "http://servidor/Publicador/esVueloDeAerolineaResponse")
    public boolean esVueloDeAerolinea(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/verificarDisponibilidadNicknameRequest", output = "http://servidor/Publicador/verificarDisponibilidadNicknameResponse")
    public boolean verificarDisponibilidadNickname(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/verificarDisponibilidadEmailRequest", output = "http://servidor/Publicador/verificarDisponibilidadEmailResponse")
    public boolean verificarDisponibilidadEmail(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.lang.String
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/saveImageRequest", output = "http://servidor/Publicador/saveImageResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://servidor/Publicador/saveImage/Fault/IOException")
    })
    public String saveImage(
        @WebParam(name = "arg0", partName = "arg0")
        byte[] arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/realizarCheckinRequest", output = "http://servidor/Publicador/realizarCheckinResponse")
    public void realizarCheckin(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/sumarVisitaRequest", output = "http://servidor/Publicador/sumarVisitaResponse")
    public void sumarVisita(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/finalizarRutaRequest", output = "http://servidor/Publicador/finalizarRutaResponse")
    public void finalizarRuta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @throws CiudadRepetidaException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/crearNuevaCiudadRequest", output = "http://servidor/Publicador/crearNuevaCiudadResponse", fault = {
        @FaultAction(className = CiudadRepetidaException_Exception.class, value = "http://servidor/Publicador/crearNuevaCiudad/Fault/CiudadRepetidaException")
    })
    public void crearNuevaCiudad(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5)
        throws CiudadRepetidaException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg10
     * @param arg11
     * @param arg12
     * @param arg13
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws RutaDeVueloRepetidaException_Exception
     * @throws UsuarioNoEsAerolineaExcepcion_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/agregarRutaDeVueloRequest", output = "http://servidor/Publicador/agregarRutaDeVueloResponse", fault = {
        @FaultAction(className = RutaDeVueloRepetidaException_Exception.class, value = "http://servidor/Publicador/agregarRutaDeVuelo/Fault/RutaDeVueloRepetidaException"),
        @FaultAction(className = UsuarioNoEsAerolineaExcepcion_Exception.class, value = "http://servidor/Publicador/agregarRutaDeVuelo/Fault/UsuarioNoEsAerolineaExcepcion")
    })
    public void agregarRutaDeVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        float arg5,
        @WebParam(name = "arg6", partName = "arg6")
        float arg6,
        @WebParam(name = "arg7", partName = "arg7")
        float arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9,
        @WebParam(name = "arg10", partName = "arg10")
        String arg10,
        @WebParam(name = "arg11", partName = "arg11")
        StringArray arg11,
        @WebParam(name = "arg12", partName = "arg12")
        String arg12,
        @WebParam(name = "arg13", partName = "arg13")
        String arg13)
        throws RutaDeVueloRepetidaException_Exception, UsuarioNoEsAerolineaExcepcion_Exception
    ;

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarPaquetesRequest", output = "http://servidor/Publicador/listarPaquetesResponse")
    public StringArray listarPaquetes();

    /**
     * 
     * @return
     *     returns com.volandoPuntoUY.model.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/listarPaquetesNoVaciosRequest", output = "http://servidor/Publicador/listarPaquetesNoVaciosResponse")
    public StringArray listarPaquetesNoVacios();

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @return
     *     returns float
     * @throws ReservaYaExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/reservarVueloRequest", output = "http://servidor/Publicador/reservarVueloResponse", fault = {
        @FaultAction(className = ReservaYaExisteException_Exception.class, value = "http://servidor/Publicador/reservarVuelo/Fault/ReservaYaExisteException")
    })
    public float reservarVuelo(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        DtPasajeArray arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6)
        throws ReservaYaExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/editarDatosAereolineaRequest", output = "http://servidor/Publicador/editarDatosAereolineaResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/editarDatosAereolinea/Fault/UsuarioNoExisteException")
    })
    public void editarDatosAereolinea(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://servidor/Publicador/editarDatosClienteRequest", output = "http://servidor/Publicador/editarDatosClienteResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servidor/Publicador/editarDatosCliente/Fault/UsuarioNoExisteException")
    })
    public void editarDatosCliente(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        TipoDocumento arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param fileName
     * @return
     *     returns byte[]
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://servidor/Publicador/getFileRequest", output = "http://servidor/Publicador/getFileResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://servidor/Publicador/getFile/Fault/IOException")
    })
    public byte[] getFile(
        @WebParam(name = "fileName", partName = "fileName")
        String fileName)
        throws IOException_Exception
    ;

}
